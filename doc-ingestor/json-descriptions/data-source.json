{
    "outcome" : "success",
    "result" : {
        "description" : "A JDBC data-source configuration",
        "stability" : "default",
        "capabilities" : [{
            "name" : "org.wildfly.data-source",
            "dynamic" : true,
            "dynamic-elements" : ["data-source"],
            "stability" : "default"
        }],
        "access-constraints" : {"application" : {"data-source" : {"type" : "datasources"}}},
        "attributes" : {
            "allocation-retry" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "INT"
                },
                "description" : "The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "allocation-retry-wait-millis" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "LONG"
                },
                "description" : "The allocation retry wait millis element specifies the amount of time, in milliseconds, to wait between retrying to allocate a connection",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "unit" : "MILLISECONDS",
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "allow-multiple-users" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Specifies if multiple users will access the datasource through the getConnection(user, password) method and hence if the internal pool type should account for that",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "authentication-context" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The Elytron authentication context which defines the javax.security.auth.Subject that is used to distinguish connections in the pool.",
                "expressions-allowed" : false,
                "required" : false,
                "nillable" : true,
                "alternatives" : [
                    "security-domain",
                    "user-name"
                ],
                "capability-reference" : "org.wildfly.security.authentication-context",
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-constraints" : {"sensitive" : {
                    "authentication-client-ref" : {"type" : "core"},
                    "data-source-security" : {"type" : "datasources"}
                }},
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "background-validation" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value can be done only on disabled datasource,  requires a server restart otherwise.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "background-validation-millis" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "LONG"
                },
                "description" : "The background-validation-millis element specifies the amount of time, in milliseconds, that background validation will run. Changing this value can be done only on disabled datasource,  requires a server restart otherwise",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "unit" : "MILLISECONDS",
                "min" : 1,
                "max" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "blocking-timeout-wait-millis" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "LONG"
                },
                "description" : "The blocking-timeout-millis element specifies the maximum time, in milliseconds, to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for locking a connection, and will never throw an exception if creating a new connection takes an inordinately long time",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "unit" : "MILLISECONDS",
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "no-services"
            },
            "capacity-decrementer-class" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Class defining the policy for decrementing connections in the pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "capacity-decrementer-properties" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "Properties to be injected in class defining the policy for decrementing connections in the pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "value-type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "capacity-incrementer-class" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Class defining the policy for incrementing connections in the pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "capacity-incrementer-properties" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "Properties to be injected in class defining the policy for incrementing connections in the pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "value-type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "check-valid-connection-sql" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is obtained from the pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "connectable" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Enable the use of CMR. This feature means that a local resource can reliably participate in an XA transaction.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "connection-listener-class" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Speciefies class name extending org.jboss.jca.adapters.jdbc.spi.listener.ConnectionListener that provides a possible to listen for connection activation and passivation in order to perform actions before the connection is returned to the application or returned to the pool.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "connection-listener-property" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "Properties to be injected in class specidied in connection-listener-class",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "value-type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "connection-url" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The JDBC driver connection URL",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "credential-reference" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "Credential (from Credential Store) to authenticate on data source",
                "expressions-allowed" : false,
                "required" : false,
                "nillable" : true,
                "alternatives" : ["password"],
                "stability" : "default",
                "access-constraints" : {"sensitive" : {
                    "credential" : {"type" : "core"},
                    "data-source-security" : {"type" : "datasources"}
                }},
                "value-type" : {
                    "store" : {
                        "type" : {
                            "TYPE_MODEL_VALUE" : "STRING"
                        },
                        "description" : "The name of the credential store holding the alias to credential",
                        "expressions-allowed" : false,
                        "required" : false,
                        "nillable" : true,
                        "capability-reference" : "org.wildfly.security.credential-store",
                        "min-length" : 1,
                        "max-length" : 2147483647,
                        "stability" : "default"
                    },
                    "alias" : {
                        "type" : {
                            "TYPE_MODEL_VALUE" : "STRING"
                        },
                        "description" : "The alias which denotes stored secret or credential in the store",
                        "expressions-allowed" : true,
                        "required" : false,
                        "nillable" : true,
                        "requires" : ["store"],
                        "min-length" : 1,
                        "max-length" : 2147483647,
                        "stability" : "default"
                    },
                    "type" : {
                        "type" : {
                            "TYPE_MODEL_VALUE" : "STRING"
                        },
                        "description" : "The type of credential this reference is denoting",
                        "expressions-allowed" : true,
                        "required" : false,
                        "nillable" : true,
                        "min-length" : 1,
                        "max-length" : 2147483647,
                        "stability" : "default"
                    },
                    "clear-text" : {
                        "type" : {
                            "TYPE_MODEL_VALUE" : "STRING"
                        },
                        "description" : "Secret specified using clear text (check credential store way of supplying credential/secrets to services)",
                        "expressions-allowed" : true,
                        "required" : false,
                        "nillable" : true,
                        "min-length" : 1,
                        "max-length" : 2147483647,
                        "stability" : "default"
                    }
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "datasource-class" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The fully qualified name of the JDBC datasource class",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "driver-class" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The fully qualified name of the JDBC driver class",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "driver-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as a jar, the name is the name of the deployment unit",
                "expressions-allowed" : true,
                "required" : true,
                "nillable" : false,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "elytron-enabled" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Enables Elytron security for handling authentication of connections. The Elytron authentication-context to be used will be current context if no context is specified (see authentication-context).",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "deprecated" : {
                    "since" : "6.1.0",
                    "reason" : "Elytron is enabled by default and this field is ignored."
                },
                "access-constraints" : {"sensitive" : {"data-source-security" : {"type" : "datasources"}}},
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "enabled" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Specifies if the datasource should be enabled. Note this attribute will not be supported runtime in next versions.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : true,
                "stability" : "default",
                "deprecated" : {
                    "since" : "3.0.0",
                    "reason" : "Specifies if the datasource should be enabled. Note this attribute will not be supported runtime in next versions."
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "enlistment-trace" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Defines if WildFly/IronJacamar should record enlistment traces",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "no-services"
            },
            "exception-sorter-class-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "exception-sorter-module" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The name of the module which makes the implementation of org.jboss.jca.adapters.jdbc.ExceptionSorter available",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "exception-sorter-properties" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "The exception sorter properties",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "requires" : ["exception-sorter-class-name"],
                "stability" : "default",
                "value-type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "flush-strategy" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specifies how the pool should be flush in case of an error.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : "FailingConnectionOnly",
                "allowed" : [
                    "FailingConnectionOnly",
                    "InvalidIdleConnections",
                    "IdleConnections",
                    "Gracefully",
                    "EntirePool",
                    "AllInvalidIdleConnections",
                    "AllIdleConnections",
                    "AllGracefully",
                    "AllConnections"
                ],
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "idle-timeout-minutes" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "LONG"
                },
                "description" : "The idle-timeout-minutes elements specifies the maximum time, in minutes, a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is half of the smallest idle-timeout-minutes value of any pool. Changing this value can be done only on disabled datasource, requires a server restart otherwise.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "unit" : "MINUTES",
                "min" : 0,
                "max" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "initial-pool-size" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "INT"
                },
                "description" : "The initial-pool-size element indicates the initial number of connections a pool should hold.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "no-services"
            },
            "jndi-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specifies the JNDI name for the datasource",
                "expressions-allowed" : true,
                "required" : true,
                "nillable" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "jta" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Enable Jakarta Transactions integration",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "max-pool-size" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "INT"
                },
                "description" : "The max-pool-size element specifies the maximum number of connections for a pool. No more connections will be created in each sub-pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : 20,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "mcp" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Defines the ManagedConnectionPool implementation, f.ex. org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : "org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreConcurrentLinkedDequeManagedConnectionPool",
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "min-pool-size" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "INT"
                },
                "description" : "The min-pool-size element specifies the minimum number of connections for a pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : 0,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "new-connection-sql" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specifies an SQL statement to execute whenever a connection is added to the connection pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "password" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specifies the password used when creating a new connection",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "alternatives" : ["credential-reference"],
                "requires" : ["user-name"],
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-constraints" : {"sensitive" : {
                    "credential" : {"type" : "core"},
                    "data-source-security" : {"type" : "datasources"}
                }},
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "pool-fair" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Defines if pool use should be fair",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "no-services"
            },
            "pool-prefill" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Should the pool be prefilled. Changing this value can be done only on disabled datasource, requires a server restart otherwise.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "pool-use-strict-min" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Specifies if the min-pool-size should be considered strictly",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "no-services"
            },
            "prepared-statements-cache-size" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "LONG"
                },
                "description" : "The number of prepared statements per connection in an LRU cache",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "query-timeout" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "LONG"
                },
                "description" : "Any configured query timeout in seconds. If not provided no timeout will be set",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "unit" : "SECONDS",
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "reauth-plugin-class-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The fully qualified class name of the reauthentication plugin implementation",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "reauth-plugin-properties" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "The properties for the reauthentication plugin",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "requires" : ["reauth-plugin-class-name"],
                "stability" : "default",
                "value-type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "security-domain" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specifies the PicketBox security domain which defines the PicketBox javax.security.auth.Subject that are used to distinguish connections in the pool",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "alternatives" : [
                    "user-name",
                    "authentication-context"
                ],
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "deprecated" : {
                    "since" : "6.1.0",
                    "reason" : "PicketBox security domains are not supported in servers running the current version of the datasources subsystem. Use 'authentication-context' to configure Elytron security"
                },
                "access-constraints" : {"sensitive" : {
                    "security-domain-ref" : {"type" : "core"},
                    "data-source-security" : {"type" : "datasources"}
                }},
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "set-tx-query-timeout" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Whether to set the query timeout based on the time remaining until transaction timeout. Any configured query timeout will be used if there is no transaction",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "share-prepared-statements" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Whether to share prepared statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "spy" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Enable spying of SQL statements",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "stale-connection-checker-class-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "stale-connection-checker-module" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The name of the module which makes the implementation of org.jboss.jca.adapters.jdbc.StaleConnectionChecker available",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "stale-connection-checker-properties" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "The stale connection checker properties",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "requires" : ["stale-connection-checker-class-name"],
                "stability" : "default",
                "value-type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "statistics-enabled" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Define whether runtime statistics are enabled or not.",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "track-statements" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Whether to check for unclosed statements when a connection is returned to the pool, result sets are closed, a statement is closed or return to the prepared statement cache. Valid values are: \"false\" - do not track statements, \"true\" - track statements and result sets and warn when they are not closed, \"nowarn\" - track statements but do not warn about them being unclosed",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : "nowarn",
                "allowed" : [
                    "true",
                    "false",
                    "nowarn"
                ],
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "tracking" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Defines if IronJacamar should track connection handles across transaction boundaries",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "transaction-isolation" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Set the java.sql.Connection transaction isolation level. Valid values are: TRANSACTION_READ_UNCOMMITTED, TRANSACTION_READ_COMMITTED, TRANSACTION_REPEATABLE_READ, TRANSACTION_SERIALIZABLE and TRANSACTION_NONE. Different values are used to set customLevel using TransactionIsolation#customLevel",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "allowed" : [
                    "TRANSACTION_NONE",
                    "TRANSACTION_READ_COMMITTED",
                    "TRANSACTION_READ_UNCOMMITTED",
                    "TRANSACTION_REPEATABLE_READ",
                    "TRANSACTION_SERIALIZABLE"
                ],
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "url-delimiter" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specifies the delimiter for URLs in connection-url for HA datasources",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "url-selector-strategy-class-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "use-ccm" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Enable the use of a cached connection manager",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "use-fast-fail" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Whether to fail a connection allocation on the first try if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : false,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "use-java-context" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "Setting this to false will bind the datasource into global JNDI",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "default" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "use-try-lock" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "LONG"
                },
                "description" : "Any configured timeout for internal locks on the resource adapter objects in seconds",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "user-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "Specify the user name used when creating a new connection",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "alternatives" : [
                    "security-domain",
                    "authentication-context"
                ],
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-constraints" : {"sensitive" : {
                    "credential" : {"type" : "core"},
                    "data-source-security" : {"type" : "datasources"}
                }},
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "valid-connection-checker-class-name" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "valid-connection-checker-module" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "description" : "The name of the module which makes the implementation of org.jboss.jca.adapters.jdbc.ValidConnectionChecker available",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "min-length" : 1,
                "max-length" : 2147483647,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "valid-connection-checker-properties" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "OBJECT"
                },
                "description" : "The valid connection checker properties",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "requires" : ["valid-connection-checker-class-name"],
                "stability" : "default",
                "value-type" : {
                    "TYPE_MODEL_VALUE" : "STRING"
                },
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            },
            "validate-on-match" : {
                "type" : {
                    "TYPE_MODEL_VALUE" : "BOOLEAN"
                },
                "description" : "The validate-on-match element specifies if connection validation should be done when a connection factory attempts to match a managed connection. This is typically exclusive to the use of background validation",
                "expressions-allowed" : true,
                "required" : false,
                "nillable" : true,
                "stability" : "default",
                "access-type" : "read-write",
                "storage" : "configuration",
                "restart-required" : "all-services"
            }
        },
        "operations" : null,
        "notifications" : null,
        "children" : {
            "connection-properties" : {
                "description" : "The connection-properties element allows you to pass in arbitrary connection properties to the Driver.connect(url, props) method",
                "model-description" : null
            },
            "statistics" : {"description" : "Runtime statistics provided by the resource adapter."}
        }
    }
}
